{"version":3,"sources":["src/app/components/layout/navbar.component.ts","node_modules/@angular/router/fesm2022/testing.mjs","src/app/components/layout/navbar.component.spec.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../../models/user.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <nav class=\"bg-white shadow-lg border-b border-secondary-200\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n          <!-- Logo and main navigation -->\n          <div class=\"flex items-center\">\n            <a routerLink=\"/\" class=\"flex items-center space-x-2\">\n              <div class=\"w-8 h-8 bg-minecraft-green border-2 border-black\"></div>\n              <span class=\"text-xl font-bold text-secondary-900\">Minecraft Dev Bible</span>\n            </a>\n            \n            <div class=\"hidden md:ml-8 md:flex md:space-x-8\">\n              <a routerLink=\"/tutorials\" \n                 routerLinkActive=\"text-primary-600 border-primary-600\"\n                 class=\"border-transparent text-secondary-500 hover:text-secondary-700 hover:border-secondary-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors duration-200\">\n                Tutorials\n              </a>\n              <a routerLink=\"/forums\" \n                 routerLinkActive=\"text-primary-600 border-primary-600\"\n                 class=\"border-transparent text-secondary-500 hover:text-secondary-700 hover:border-secondary-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors duration-200\">\n                Forums\n              </a>\n            </div>\n          </div>\n\n          <!-- User menu -->\n          <div class=\"flex items-center space-x-4\">\n            <div *ngIf=\"currentUser$ | async as user; else loginButtons\" class=\"flex items-center space-x-3\">\n              <img [src]=\"user.avatarUrl || '/assets/default-avatar.png'\" \n                   [alt]=\"user.username\"\n                   class=\"w-8 h-8 rounded-full border-2 border-secondary-300\">\n              <span class=\"text-sm font-medium text-secondary-700\">{{ user.username }}</span>\n              <button (click)=\"logout()\" \n                      class=\"text-sm text-secondary-500 hover:text-secondary-700 transition-colors duration-200\">\n                Logout\n              </button>\n            </div>\n            \n            <ng-template #loginButtons>\n              <div class=\"flex space-x-2\">\n                <button (click)=\"login('github')\" \n                        class=\"btn-secondary text-sm\">\n                  <svg class=\"w-4 h-4 mr-2 inline\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\" clip-rule=\"evenodd\"></path>\n                  </svg>\n                  GitHub\n                </button>\n                <button (click)=\"login('google')\" \n                        class=\"btn-primary text-sm\">\n                  <svg class=\"w-4 h-4 mr-2 inline\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                    <path fill=\"currentColor\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                    <path fill=\"currentColor\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                    <path fill=\"currentColor\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                  </svg>\n                  Google\n                </button>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </nav>\n  `\n})\nexport class NavbarComponent implements OnInit {\n  currentUser$: Observable<User | null>;\n\n  constructor(private authService: AuthService) {\n    this.currentUser$ = this.authService.currentUser$;\n  }\n\n  ngOnInit(): void {}\n\n  login(provider: 'google' | 'github'): void {\n    this.authService.login(provider);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}","/**\n * @license Angular v19.2.14\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { NgModule, signal, Injectable, ViewChild, Component } from '@angular/core';\nimport { TestBed } from '@angular/core/testing';\nimport { ROUTES, ROUTER_CONFIGURATION, Router, afterNextNavigation, RouterOutlet } from './router-Dwfin5Au.mjs';\nexport { ɵEmptyOutletComponent as ɵɵEmptyOutletComponent } from './router-Dwfin5Au.mjs';\nimport { RouterModule, ROUTER_PROVIDERS, withPreloading, NoPreloading } from './router_module-DTJgGWLd.mjs';\nexport { RouterLink as ɵɵRouterLink, RouterLinkActive as ɵɵRouterLinkActive } from './router_module-DTJgGWLd.mjs';\nimport { provideLocationMocks } from '@angular/common/testing';\nimport '@angular/common';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport '@angular/platform-browser';\n\n/**\n * @description\n *\n * Sets up the router to be used for testing.\n *\n * The modules sets up the router to be used for testing.\n * It provides spy implementations of `Location` and `LocationStrategy`.\n *\n * @usageNotes\n * ### Example\n *\n * ```ts\n * beforeEach(() => {\n *   TestBed.configureTestingModule({\n *     imports: [\n *       RouterModule.forRoot(\n *         [{path: '', component: BlankCmp}, {path: 'simple', component: SimpleCmp}]\n *       )\n *     ]\n *   });\n * });\n * ```\n *\n * @publicApi\n * @deprecated Use `provideRouter` or `RouterModule`/`RouterModule.forRoot` instead.\n * This module was previously used to provide a helpful collection of test fakes,\n * most notably those for `Location` and `LocationStrategy`.  These are generally not\n * required anymore, as `MockPlatformLocation` is provided in `TestBed` by default.\n * However, you can use them directly with `provideLocationMocks`.\n */\nclass RouterTestingModule {\n  static withRoutes(routes, config) {\n    return {\n      ngModule: RouterTestingModule,\n      providers: [{\n        provide: ROUTES,\n        multi: true,\n        useValue: routes\n      }, {\n        provide: ROUTER_CONFIGURATION,\n        useValue: config ? config : {}\n      }]\n    };\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: RouterTestingModule,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.NgModule\n  });\n  static ɵmod = i0.ɵɵngDeclareNgModule({\n    minVersion: \"14.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: RouterTestingModule,\n    exports: [RouterModule]\n  });\n  static ɵinj = i0.ɵɵngDeclareInjector({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: RouterTestingModule,\n    providers: [ROUTER_PROVIDERS, provideLocationMocks(), withPreloading(NoPreloading).ɵproviders, {\n      provide: ROUTES,\n      multi: true,\n      useValue: []\n    }],\n    imports: [RouterModule]\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: RouterTestingModule,\n  decorators: [{\n    type: NgModule,\n    args: [{\n      exports: [RouterModule],\n      providers: [ROUTER_PROVIDERS, provideLocationMocks(), withPreloading(NoPreloading).ɵproviders, {\n        provide: ROUTES,\n        multi: true,\n        useValue: []\n      }]\n    }]\n  }]\n});\nclass RootFixtureService {\n  fixture;\n  harness;\n  createHarness() {\n    if (this.harness) {\n      throw new Error('Only one harness should be created per test.');\n    }\n    this.harness = new RouterTestingHarness(this.getRootFixture());\n    return this.harness;\n  }\n  getRootFixture() {\n    if (this.fixture !== undefined) {\n      return this.fixture;\n    }\n    this.fixture = TestBed.createComponent(RootCmp);\n    this.fixture.detectChanges();\n    return this.fixture;\n  }\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: RootFixtureService,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.Injectable\n  });\n  static ɵprov = i0.ɵɵngDeclareInjectable({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: RootFixtureService,\n    providedIn: 'root'\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: RootFixtureService,\n  decorators: [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }]\n});\nclass RootCmp {\n  outlet;\n  routerOutletData = signal(undefined);\n  static ɵfac = i0.ɵɵngDeclareFactory({\n    minVersion: \"12.0.0\",\n    version: \"19.2.14\",\n    ngImport: i0,\n    type: RootCmp,\n    deps: [],\n    target: i0.ɵɵFactoryTarget.Component\n  });\n  static ɵcmp = i0.ɵɵngDeclareComponent({\n    minVersion: \"14.0.0\",\n    version: \"19.2.14\",\n    type: RootCmp,\n    isStandalone: true,\n    selector: \"ng-component\",\n    viewQueries: [{\n      propertyName: \"outlet\",\n      first: true,\n      predicate: RouterOutlet,\n      descendants: true\n    }],\n    ngImport: i0,\n    template: '<router-outlet [routerOutletData]=\"routerOutletData()\"></router-outlet>',\n    isInline: true,\n    dependencies: [{\n      kind: \"directive\",\n      type: RouterOutlet,\n      selector: \"router-outlet\",\n      inputs: [\"name\", \"routerOutletData\"],\n      outputs: [\"activate\", \"deactivate\", \"attach\", \"detach\"],\n      exportAs: [\"outlet\"]\n    }]\n  });\n}\ni0.ɵɵngDeclareClassMetadata({\n  minVersion: \"12.0.0\",\n  version: \"19.2.14\",\n  ngImport: i0,\n  type: RootCmp,\n  decorators: [{\n    type: Component,\n    args: [{\n      template: '<router-outlet [routerOutletData]=\"routerOutletData()\"></router-outlet>',\n      imports: [RouterOutlet]\n    }]\n  }],\n  propDecorators: {\n    outlet: [{\n      type: ViewChild,\n      args: [RouterOutlet]\n    }]\n  }\n});\n/**\n * A testing harness for the `Router` to reduce the boilerplate needed to test routes and routed\n * components.\n *\n * @publicApi\n */\nclass RouterTestingHarness {\n  /**\n   * Creates a `RouterTestingHarness` instance.\n   *\n   * The `RouterTestingHarness` also creates its own root component with a `RouterOutlet` for the\n   * purposes of rendering route components.\n   *\n   * Throws an error if an instance has already been created.\n   * Use of this harness also requires `destroyAfterEach: true` in the `ModuleTeardownOptions`\n   *\n   * @param initialUrl The target of navigation to trigger before returning the harness.\n   */\n  static async create(initialUrl) {\n    const harness = TestBed.inject(RootFixtureService).createHarness();\n    if (initialUrl !== undefined) {\n      await harness.navigateByUrl(initialUrl);\n    }\n    return harness;\n  }\n  /**\n   * Fixture of the root component of the RouterTestingHarness\n   */\n  fixture;\n  /** @internal */\n  constructor(fixture) {\n    this.fixture = fixture;\n  }\n  /** Instructs the root fixture to run change detection. */\n  detectChanges() {\n    this.fixture.detectChanges();\n  }\n  /** The `DebugElement` of the `RouterOutlet` component. `null` if the outlet is not activated. */\n  get routeDebugElement() {\n    const outlet = this.fixture.componentInstance.outlet;\n    if (!outlet || !outlet.isActivated) {\n      return null;\n    }\n    return this.fixture.debugElement.query(v => v.componentInstance === outlet.component);\n  }\n  /** The native element of the `RouterOutlet` component. `null` if the outlet is not activated. */\n  get routeNativeElement() {\n    return this.routeDebugElement?.nativeElement ?? null;\n  }\n  async navigateByUrl(url, requiredRoutedComponentType) {\n    const router = TestBed.inject(Router);\n    let resolveFn;\n    const redirectTrackingPromise = new Promise(resolve => {\n      resolveFn = resolve;\n    });\n    afterNextNavigation(TestBed.inject(Router), resolveFn);\n    await router.navigateByUrl(url);\n    await redirectTrackingPromise;\n    this.fixture.detectChanges();\n    const outlet = this.fixture.componentInstance.outlet;\n    // The outlet might not be activated if the user is testing a navigation for a guard that\n    // rejects\n    if (outlet && outlet.isActivated && outlet.activatedRoute.component) {\n      const activatedComponent = outlet.component;\n      if (requiredRoutedComponentType !== undefined && !(activatedComponent instanceof requiredRoutedComponentType)) {\n        throw new Error(`Unexpected routed component type. Expected ${requiredRoutedComponentType.name} but got ${activatedComponent.constructor.name}`);\n      }\n      return activatedComponent;\n    } else {\n      if (requiredRoutedComponentType !== undefined) {\n        throw new Error(`Unexpected routed component type. Expected ${requiredRoutedComponentType.name} but the navigation did not activate any component.`);\n      }\n      return null;\n    }\n  }\n}\nexport { RouterTestingHarness, RouterTestingModule, RouterOutlet as ɵɵRouterOutlet };\n","import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { of } from 'rxjs';\nimport { NavbarComponent } from './navbar.component';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../../models/user.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\n\ndescribe('NavbarComponent', () => {\n  let component: NavbarComponent;\n  let fixture: ComponentFixture<NavbarComponent>;\n  let mockAuthService: jasmine.SpyObj<AuthService>;\n\n  const mockUser: User = {\n    id: 1,\n    email: 'test@example.com',\n    username: 'testuser',\n    avatarUrl: undefined,\n    provider: 'local',\n    roles: ['USER']\n  };\n\n  beforeEach(async () => {\n    const authServiceSpy = jasmine.createSpyObj('AuthService', [\n      'login',\n      'logout'\n    ], {\n      currentUser$: of(mockUser)\n    });\n\n    await TestBed.configureTestingModule({\n      imports: [NavbarComponent, RouterTestingModule],\n      providers: [\n        { provide: AuthService, useValue: authServiceSpy },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            snapshot: { params: {} },\n            params: of({}),\n            queryParams: of({})\n          }\n        }\n      ]\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(NavbarComponent);\n    component = fixture.componentInstance;\n    mockAuthService = TestBed.inject(AuthService) as jasmine.SpyObj<AuthService>;\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should initialize with currentUser$ observable', () => {\n    expect(component.currentUser$).toBeDefined();\n    \n    component.currentUser$.subscribe(user => {\n      expect(user).toEqual(mockUser);\n    });\n  });\n\n  it('should call authService.login with provider', () => {\n    component.login('github');\n    expect(mockAuthService.login).toHaveBeenCalledWith('github');\n\n    component.login('google');\n    expect(mockAuthService.login).toHaveBeenCalledWith('google');\n  });\n\n  it('should call authService.logout', () => {\n    component.logout();\n    expect(mockAuthService.logout).toHaveBeenCalled();\n  });\n\n  it('should handle null user in currentUser$ observable', () => {\n    // Update the spy to return null user\n    Object.defineProperty(mockAuthService, 'currentUser$', {\n      value: of(null)\n    });\n    \n    component = new NavbarComponent(mockAuthService);\n    \n    component.currentUser$.subscribe(user => {\n      expect(user).toBeNull();\n    });\n  });\n\n  it('should render correctly with user data', () => {\n    fixture.detectChanges();\n    \n    const compiled = fixture.nativeElement as HTMLElement;\n    expect(compiled.querySelector('nav')).toBeTruthy();\n    expect(compiled.textContent).toContain('Minecraft Dev Bible');\n  });\n\n  it('should have navigation links', () => {\n    fixture.detectChanges();\n    \n    const compiled = fixture.nativeElement as HTMLElement;\n    const tutorialsLink = compiled.querySelector('a[routerLink=\"/tutorials\"]');\n    const forumsLink = compiled.querySelector('a[routerLink=\"/forums\"]');\n    \n    expect(tutorialsLink).toBeTruthy();\n    expect(forumsLink).toBeTruthy();\n    expect(tutorialsLink?.textContent?.trim()).toBe('Tutorials');\n    expect(forumsLink?.textContent?.trim()).toBe('Forums');\n  });\n});"],"mappings":"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","names":["NavbarComponent","init_testing","init_testing"],"x_google_ignoreList":[1]}