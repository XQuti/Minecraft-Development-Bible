{
  "version": 3,
  "sources": ["src/app/components/layout/navbar.component.ts", "src/app/components/layout/navbar.component.spec.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../../models/user.model';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  template: `\n    <nav class=\"bg-white shadow-lg border-b border-secondary-200\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n          <!-- Logo and main navigation -->\n          <div class=\"flex items-center\">\n            <a routerLink=\"/\" class=\"flex items-center space-x-2\">\n              <div class=\"w-8 h-8 bg-minecraft-green border-2 border-black\"></div>\n              <span class=\"text-xl font-bold text-secondary-900\">Minecraft Dev Bible</span>\n            </a>\n            \n            <div class=\"hidden md:ml-8 md:flex md:space-x-8\">\n              <a routerLink=\"/tutorials\" \n                 routerLinkActive=\"text-primary-600 border-primary-600\"\n                 class=\"border-transparent text-secondary-500 hover:text-secondary-700 hover:border-secondary-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors duration-200\">\n                Tutorials\n              </a>\n              <a routerLink=\"/forums\" \n                 routerLinkActive=\"text-primary-600 border-primary-600\"\n                 class=\"border-transparent text-secondary-500 hover:text-secondary-700 hover:border-secondary-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium transition-colors duration-200\">\n                Forums\n              </a>\n            </div>\n          </div>\n\n          <!-- User menu -->\n          <div class=\"flex items-center space-x-4\">\n            <div *ngIf=\"currentUser$ | async as user; else loginButtons\" class=\"flex items-center space-x-3\">\n              <img [src]=\"user.avatarUrl || '/assets/default-avatar.png'\" \n                   [alt]=\"user.username\"\n                   class=\"w-8 h-8 rounded-full border-2 border-secondary-300\">\n              <span class=\"text-sm font-medium text-secondary-700\">{{ user.username }}</span>\n              <button (click)=\"logout()\" \n                      class=\"text-sm text-secondary-500 hover:text-secondary-700 transition-colors duration-200\">\n                Logout\n              </button>\n            </div>\n            \n            <ng-template #loginButtons>\n              <div class=\"flex space-x-2\">\n                <button (click)=\"login('github')\" \n                        class=\"btn-secondary text-sm\">\n                  <svg class=\"w-4 h-4 mr-2 inline\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                    <path fill-rule=\"evenodd\" d=\"M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z\" clip-rule=\"evenodd\"></path>\n                  </svg>\n                  GitHub\n                </button>\n                <button (click)=\"login('google')\" \n                        class=\"btn-primary text-sm\">\n                  <svg class=\"w-4 h-4 mr-2 inline\" viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                    <path fill=\"currentColor\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                    <path fill=\"currentColor\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                    <path fill=\"currentColor\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                  </svg>\n                  Google\n                </button>\n              </div>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </nav>\n  `\n})\nexport class NavbarComponent {\n  currentUser$: Observable<User | null>;\n\n  constructor(private authService: AuthService) {\n    this.currentUser$ = this.authService.currentUser$;\n  }\n\n\n\n  login(provider: 'google' | 'github'): void {\n    this.authService.login(provider);\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}", "import { ComponentFixture, TestBed } from '@angular/core/testing';\nimport { of } from 'rxjs';\nimport { NavbarComponent } from './navbar.component';\nimport { AuthService } from '../../services/auth.service';\nimport { User } from '../../models/user.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\n\ndescribe('NavbarComponent', () => {\n  let component: NavbarComponent;\n  let fixture: ComponentFixture<NavbarComponent>;\n  let mockAuthService: jasmine.SpyObj<AuthService>;\n\n  const mockUser: User = {\n    id: 1,\n    email: 'test@example.com',\n    username: 'testuser',\n    avatarUrl: undefined,\n    provider: 'local',\n    roles: ['USER']\n  };\n\n  beforeEach(async () => {\n    const authServiceSpy = jasmine.createSpyObj('AuthService', [\n      'login',\n      'logout'\n    ], {\n      currentUser$: of(mockUser)\n    });\n\n    await TestBed.configureTestingModule({\n      imports: [NavbarComponent, RouterTestingModule],\n      providers: [\n        { provide: AuthService, useValue: authServiceSpy },\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            snapshot: { params: {} },\n            params: of({}),\n            queryParams: of({})\n          }\n        }\n      ]\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(NavbarComponent);\n    component = fixture.componentInstance;\n    mockAuthService = TestBed.inject(AuthService) as jasmine.SpyObj<AuthService>;\n    \n    // Setup spy return values\n    mockAuthService.logout.and.returnValue(of({ message: 'Logged out successfully' }));\n    mockAuthService.login.and.returnValue(undefined);\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should initialize with currentUser$ observable', () => {\n    expect(component.currentUser$).toBeDefined();\n    \n    component.currentUser$.subscribe(user => {\n      expect(user).toEqual(mockUser);\n    });\n  });\n\n  it('should call authService.login with provider', () => {\n    component.login('github');\n    expect(mockAuthService.login).toHaveBeenCalledWith('github');\n\n    component.login('google');\n    expect(mockAuthService.login).toHaveBeenCalledWith('google');\n  });\n\n  it('should call authService.logout', () => {\n    component.logout();\n    expect(mockAuthService.logout).toHaveBeenCalled();\n  });\n\n  it('should handle null user in currentUser$ observable', () => {\n    // Update the spy to return null user\n    Object.defineProperty(mockAuthService, 'currentUser$', {\n      value: of(null)\n    });\n    \n    component = new NavbarComponent(mockAuthService);\n    \n    component.currentUser$.subscribe(user => {\n      expect(user).toBeNull();\n    });\n  });\n\n  it('should render correctly with user data', () => {\n    fixture.detectChanges();\n    \n    const compiled = fixture.nativeElement as HTMLElement;\n    expect(compiled.querySelector('nav')).toBeTruthy();\n    expect(compiled.textContent).toContain('Minecraft Dev Bible');\n  });\n\n  it('should have navigation links', () => {\n    fixture.detectChanges();\n    \n    const compiled = fixture.nativeElement as HTMLElement;\n    const tutorialsLink = compiled.querySelector('a[routerLink=\"/tutorials\"]');\n    const forumsLink = compiled.querySelector('a[routerLink=\"/forums\"]');\n    \n    expect(tutorialsLink).toBeTruthy();\n    expect(forumsLink).toBeTruthy();\n    expect(tutorialsLink?.textContent?.trim()).toBe('Tutorials');\n    expect(forumsLink?.textContent?.trim()).toBe('Forums');\n  });\n});"],
  "mappings": "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",
  "names": ["NavbarComponent", "init_testing"]
}
